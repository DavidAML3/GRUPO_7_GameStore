/*Reglas de CSS --> instrucciones que se aplican a un elemento para agregarle estilos*/
body{font-family:sans-serif}
/*"body" --> selector --> indica sobbre que elemento/s aplicaremos la regla
/*"font-family" --> propiedad --> define que propiedad del elemento/s a modificar*/
/*"sans-serif" --> valor --> especifica el comportamiento de la propiedad*/

/*Selectores de ID*/
/*HTML*/
/*<h3 id="saludo">¡Hola!</h3>*/
#saludo {color:blue}

/*Selectores de clase*/
/*HTML*/
/*<h3 class="noticia destacada">Una noticia</h3>*/
.noticia{font-size:22px}

/*Selectores de etiqueta*/
/*HTML*/
/*<p>Ad lorem ipsum dolor sit amet<p>*/
p{color:grey}

/*Selectores combinados*/
/*HTML*/
/*<h2 class="subtitulo">Un subtitulo</h2>*/
h2.subtitulo{color: yellow}

/*Selectores descendentes*/
/*HTML*/
/*
<ul id="lista">
    <li>Primer item</li>
</ul>
*/
ul#lista li {text-align:center}

/*Propiedades tipograficas*/
p{
    font-family: Arial, sans-serif;
    font-size: 23px;
    font-style: normal;
    font-weight: 500;
    text-align:justify;
    text-decoration:underline;
    line-height: 20px;


}

/*COLORES*/
/*Formatos de Color*/
/*Nombre*/
h2{color:purple}
/*Hexadecimal*/
h2{color:#3459ff}
/*RGB*/
p{color:rgb(12,34,32)}
/*RGBA*/
/*rgba(122,50,125,0.5). El ultimo numero representa la opacidad qeu tendra el elemento. va del 0 al 1 y mientras menor el nro, mayor la transparencia*/

/*Opacidad --> le da transparencia al elemento*/
p {opacity: 0.5}

/*Color de fondo*/
p{background-color:tomato}

/*Imagen de fondo*/

/*background-image*/
/*asigna una imagen de fondo al elemento*/
body{background-image:url('../img/bici.jpg')}
/*background-repeat*/
/*controla si se va a repetir, y de que manera, la imagen dispuesta. Recibr los valores repeat, no repeat, repeat-x, repeat-y, round y space.*/
body{background-repeat: repeat-x}
/*background-position*/
/*permite mover la img en el elemento; recibe tamaños en pixeles y %, right, bottom. left, etc. */
body{background-position: right top}
/*background-attachment*/
/*permite establecer si la img de fondo se va a mover junto con la pag al hacer scroll o si se queda fija. REcibe fixede, scroll, inherit e initial*/
body{background-attachment: fixed}
/*background-size*/
body{background-size: 130px}

/*Modelo de Caja*/
/*width y height*/
div{
    width: 120px;
    height: 130px;
}
/*padding --> espacio de relleno que podemos agregar entre el contenido del elemento y su borde*/
/*1 valor para los 4 lados de la caja*/
div{
    padding: 12px;
}
/*2 valores; primero para el padding de arriba y abajo y segundo para izq y der*/
div{padding: 12px 20px};
/*3 valores; 1. padding de arriba, 2. izq y der y 3. abajo*/
div{padding: 12px 20px 18px}
/*4 valores; 1. arriba, 2. der, 3. abajo y 4. izq*/

/*Border*/
/*Estilo, espesor y color*/
/*estilo --> solid, dotted, dashed, double*/
div{ border: solid 3px yellow}

/*Margin --> margen exterior (los valores se manejan igual que en padding)*/
div{ margin: 15px}

/*Box-sizing*/
/*border-box --> con esto, el ancho y alto tomara en cuenta no solo el contenido, sino tamb el padding y el borde, dejando solo el margen por fuera*/
div{
    width: 150px;
    height: 130px;
    padding: 12px;
    border: solid 3px yellow;
    margin: 15px;
    box-sizing: border-box;
}

/*EMS*/
/*relativos al elemento padre*/
p{font-size:1.5em} /*16px * 1.5 = 24px */
p{
    font-size: 20px;
    line-height: 2em; /* 20px * 2 = 40px */
    padding: 1.5em; /* 20px * 1.5 = 30px */
}

/*REMS*/
/*relativos al tamaño del font size del elemento <html> */
p{font-size: 1.5rem}

/*VIEWPORT*/
/*espacio visible que tiene el navegador para mostrar el sitio*/
div{
    width: 25vw; /*25% del ancho disponible*/
    height: 50vh; /*50% del alto disponible*/
}

/*MEDIA QUERIES*/
/*reglas de CSS que permiten cambiar los estilos de los elementos en funcion de las caracteristicas del dispositivo*/
/*si como minimo el viewport tiene N px de ancho, apliquemos estas reglas*/
@media (min-width: 460px){
    body{
        background: red;
    }
}

/*PSEUDO SELECTORES*/

/*pseudo clases*/
/*se agregan a los selectores que ya conocemos*/

/*selector:pseudo-clase{
    propiedad: valor
}*/

/*pseudo-ç clases de los enlaces*/
a:link,
a:visited{
    color: rgb(98,8,194);
    font-weight: bold;
}
a:hover,
a:active{
    color:rgb(136,11,74);
}
/*link*/
/*se usa para aplicar estilo a los enlaces <a></a> que tengan la propiedad href*/
a:link{
    background-color:rbg(234,0,255);
    border-color:rgb(161,17,89);
    color: red;
}
/*visited*/
/*aplica estilo a los enlaces <a></a> que han sido VISITADOS al menos una vez por parte del usuario*/
a:visited{
    background-color:rbg(234,0,255);
    border-color:rgb(161,17,89);
    color: red;
}
/*hover*/
/*se usa para aplicar estilo a cualquier elemento sobre el cual el usuario posicione el cursor*/
a:hover{
    background-color:gold;
}
/*active*/
/*aplica estilo a los enlaces <a></a> que esten siendo clickeados por el usuario*/
a:active{
    background-color:rbg(234,0,255);
    border-color:rgb(161,17,89);
    color: red;
}

/*pseudo clases de los inputs*/
input:focus{border-color: orange}
input:disabled{background-color: gray}
:target {font-weight: bold;}

/*focus*/
/*se aplica cuando un elemento tiene el foco del cursor*/
input:focus{
    color:orange;
    font-weight:bold;
}
/*disabled*/
/*se aplica cuando un elemento esta deshabilitado*/
input:disabled{
    background-color: gray;
}

/*pseudo elementos*/
/*selector::pseudo-elemento{
    propiedad: valor;
}*/

/*::before*/
/*el nuevo contenido aparecera ANTES del contenido interno del elemento*/
div::before{
    content: "Esto se renderiza antes del elemento";
    color: red;
}

/*::after*/
/*el nuevo contenido aparecera DESPUES del contenido interno del elemento*/
dov::after{
    content: "Esto se renderiza despues del elemento";
    color: red;
}

/*esquema general de sintaxis de CSS*/
/*selector #id .class :pseudoclase ::pseudoelemento [atributo]{
    propiedad: valor;
    propiedad: valor;
    propiedad: valor;
}*/

/*POSICIONAMIENTO*/

/*Posicionamiento Relativo*/
/*Los puntos de referencia son los bordes de la caja*/
/*El espacio que la caja ocupaba originalmente seguira ocupado. 
Los elementos que esten a su lado no van a ser afectados por esta modificacion*/

.caja-1{
    position: relative;
    left: 100px;
    top: 50px;
}

/*Posicionamiento Absoluto*/
/*Los puntos de referencia seran los costados del body*/
/*El espacio que ocupaba la caja qeudara vacio y otros elementos podran ocuparlo*/

.caja-2{
    position: absolute;
    right: 100px;
    bottom: 50px;
}

/*Position reltive + Position Absolute*/
/*si las cajas hijas estan dentro de otra caja padre, el punto de referencia seguira siendo el body
a menos que hagamos relativa la posicion de su padre*/

div { position: relative}

.caja-2{
    position: absolute;
    right: 100px;
    top: 50px;
}

/*Posicionamiento fijo*/
/*los puntos de referencia seran los costados de la ventana del navegador*/
/*sin importar que hagamos scroll, el elemento siempre se mantendra fijo con respecto a la ventana del navegador*/

.botonFucsia{
    position: fixed;
    right: 50px;
    bottom: 50px;
}

/*Z-INDEX*/

/*controla como se apilan las capas en CSS*/
/*con z-index en 10, se movera delante del resto ya que ahora tiene un valor mayor*/
.caja-2{
    position: relative;
    z-index: 10;
}

/*TRANSICIONES*/

/*elemento a manipular*/
button{
    background-color: #eaeaea;
    color: #000
}
/*ante que interaccion este elemento va a cambiar el valor de su propiedad.*/
/*Vamos a hacerlo cuando ubiquemos el cursor sobre dicho elemento con la pseudo-clase: hover*/
button:hover{
    background-color: #1a73e8;
    color: #fff
}

/*transition-property*/
/*para definir los nombres de las propiedades CSS en las que el efecto de la tranicion debe aplicarse*/
/*transition-duration*/
/*para establecer el tiempo que debe durar la transicion*/

button{
    background-color: #eaeaea;
    color: #000;
    transition-property: background-color, color;
    transition-duration: 0.5s; 
}

/*ANIMACIONES*/

@keyframes fantasma{
    0% {opacity: 0%}
    25% {transform: translateY(-20px); opacity: 100%}
    100%{opacity: 0%}
}

/*forma abreviada*/
.fantasma{
    animation: fantasma 3s infinite;
}

